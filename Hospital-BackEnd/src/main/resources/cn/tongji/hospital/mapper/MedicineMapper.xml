<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.tongji.hospital.mapper.MedicineMapper">
  <resultMap id="BaseResultMap" type="cn.tongji.hospital.model.Medicine">
    <id column="medicine_id" jdbcType="BIGINT" property="medicineId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="inventory" jdbcType="INTEGER" property="inventory" />
    <result column="indication" jdbcType="INTEGER" property="indication" />
    <result column="brand" jdbcType="INTEGER" property="brand" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    medicine_id, name, price, inventory, indication, brand
  </sql>
  <select id="selectByExample" parameterType="cn.tongji.hospital.model.MedicineExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from medicine
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from medicine
    where medicine_id = #{medicineId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from medicine
    where medicine_id = #{medicineId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.tongji.hospital.model.MedicineExample">
    delete from medicine
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.tongji.hospital.model.Medicine">
    insert into medicine (medicine_id, name, price, 
      inventory, indication, brand
      )
    values (#{medicineId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, 
      #{inventory,jdbcType=INTEGER}, #{indication,jdbcType=INTEGER}, #{brand,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.tongji.hospital.model.Medicine">
    insert into medicine
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="medicineId != null">
        medicine_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inventory != null">
        inventory,
      </if>
      <if test="indication != null">
        indication,
      </if>
      <if test="brand != null">
        brand,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="medicineId != null">
        #{medicineId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="inventory != null">
        #{inventory,jdbcType=INTEGER},
      </if>
      <if test="indication != null">
        #{indication,jdbcType=INTEGER},
      </if>
      <if test="brand != null">
        #{brand,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.tongji.hospital.model.MedicineExample" resultType="java.lang.Long">
    select count(*) from medicine
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update medicine
    <set>
      <if test="record.medicineId != null">
        medicine_id = #{record.medicineId,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.inventory != null">
        inventory = #{record.inventory,jdbcType=INTEGER},
      </if>
      <if test="record.indication != null">
        indication = #{record.indication,jdbcType=INTEGER},
      </if>
      <if test="record.brand != null">
        brand = #{record.brand,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update medicine
    set medicine_id = #{record.medicineId,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=INTEGER},
      inventory = #{record.inventory,jdbcType=INTEGER},
      indication = #{record.indication,jdbcType=INTEGER},
      brand = #{record.brand,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.tongji.hospital.model.Medicine">
    update medicine
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="inventory != null">
        inventory = #{inventory,jdbcType=INTEGER},
      </if>
      <if test="indication != null">
        indication = #{indication,jdbcType=INTEGER},
      </if>
      <if test="brand != null">
        brand = #{brand,jdbcType=INTEGER},
      </if>
    </set>
    where medicine_id = #{medicineId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.tongji.hospital.model.Medicine">
    update medicine
    set name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      inventory = #{inventory,jdbcType=INTEGER},
      indication = #{indication,jdbcType=INTEGER},
      brand = #{brand,jdbcType=INTEGER}
    where medicine_id = #{medicineId,jdbcType=BIGINT}
  </update>
</mapper>